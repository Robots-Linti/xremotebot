#!/usr/bin/env python2
# -*- coding: utf-8 -*-
from os.path import exists, join, dirname, realpath
import os
import time
import xremotebot.configuration as conf
from util import run, runbg
import uuid

secret = uuid.uuid4().hex

PWD = realpath(dirname(__file__))
os.chdir(PWD)

venvpy = join(PWD, 'bin', 'python')


def kill_old_daemons():
    for pidfile in ('node.pid', 'avconv.pid'):
        if exists(pidfile):
            with open(pidfile) as f:
                try:
                    os.kill(int(f.read()), 9)
                except OSError:
                    pass
            os.unlink(pidfile)

kill_old_daemons()

if not exists('test.db'):
    print('Creando la base de datos')
    run(venvpy, 'deploy_db.py', stdout=None, stderr=None)


if len(conf.robots.get('scribbler', [])) > 0:
    print('Creando dispositivos rfcomm para los robots scribbler')
    while True:
        print('Se requiere la contrase√±a de root para continuar')
        status, _, _ = run(
            'su', '-c', ' '.join((venvpy, 'reconnect_myro.py')),
            stdout=None, stderr=None)
        if status == 0:
            break

if not conf.disable_streaming and not conf.use_embed_streaming:
    print('Iniciando streaming de video')
    # node = runbg('node', 'streaming/stream-server.js',
    #             secret, '8082', str(conf.video_ws_port))
    node = runbg('ffserver', '-f','ffserver.conf')
    with open('node.pid', 'w') as f:
        f.write(str(node.pid))

    print('Esperando a que el servicio de streaming arranque')
    time.sleep(1)
#    avconv = runbg('ffmpeg', '-i',
#            'rtsp://server/live2.sdp',
#            '-s', '640x480', 'http://localhost:1234/feed1.ffm', '-v', 'quiet')

    avconv = runbg('ffmpeg', '-f', 'video4linux', '-i',
            'rtsp://server/live2.sdp',
            '-s', '640x480', 'http://localhost:1234/feed1.ffm', '-v', 'quiet')
    with open('avconv.pid', 'w') as f:
        f.write(str(avconv.pid))

try:
    run(venvpy, 'app.py', stdout=None, stderr=None)
except KeyboardInterrupt:
    pass
finally:
    kill_old_daemons()
